@use "sass:math";
@import './variables';

@function __vw($px-vw, $base-vw: 1920) {
  @return ($px-vw * 100vw) / $base-vw
};

@function __vh($px-vw, $base-vh: 1080) {
  $vh100: calc(var(--vh) * 100);

  @return calc($px-vw * $vh100 / $base-vh)
};

@mixin ellipsis($line) {
  display: -webkit-box;
  text-overflow: ellipsis;
  overflow: hidden;
  //ì¤„
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
  white-space: normal;
  word-wrap: break-word;
}

@mixin zebra-shadow($size, $colors) {
  $text-shadow: ();
  @for $i from 1 through length($colors) {
    @for $j from 0 through $size {
      $pos: (($i - 1) * $size + $j) * 1px;
      $text-shadow: append(
        $text-shadow,
        $pos $pos nth($colors, $i),
        'comma'
      );
    }
  }
  text-shadow: $text-shadow;
}

@keyframes text-shadow {
  $red: #F40000;
  $green: #28D58F;
  $blue:  #15007F;
  $yellow: #FFBA00;
  $pink: #FD138A;

  from, 19.9% {
    @include zebra-shadow(2, (
      $blue, $pink, $yellow, $red, $green,
      $blue, $pink, $yellow, $red, $green
    ));
  }

  20%, 39.9% {
    @include zebra-shadow(2,  (
      $green, $blue, $pink, $yellow, $red,
      $green, $blue, $pink, $yellow, $red
    ));
  }

  40%, 59.9% {
    @include zebra-shadow(2, (
      $red, $green, $blue, $pink, $yellow,
      $red, $green, $blue, $pink, $yellow
    ));
  }

  60%, 79.9% {
    @include zebra-shadow(2, (
      $yellow, $red, $green, $blue, $pink,
      $yellow, $red, $green, $blue, $pink,
    ));
  }

  80%, to {
    @include zebra-shadow(2, (
      $pink, $yellow, $red, $green, $blue,
      $pink, $yellow, $red, $green, $blue
    ));
  }
}